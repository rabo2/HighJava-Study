<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
<!-- 이 문서는 ibatis에서 처리할 SQL문을 작성하는 문서	이다. -->
<sqlMap namespace = "lprod">
<!-- 
	이부분에서 처리핧 SQL문에 맞는 태그글 적성하여 SQL문을 작성한다.
	사용할 수 있는 기본 태그들
	<select>select문 작성</select>
	<insert>insert문 작성</insert>
	<update>insert문 작성</update>	
	<delete>delete문 작성</delete>
 -->

 
 <!-- id속성 ==> 실행할 태그를 java소스에서 호출 할때 사용되는 이름으로
 	위의 sqlMap태그의 namespace속성값과 연결해서 사용용한다.
 	(예 : 'lprod.insertLprod')
  	parameterClass속성 => SQL문에 사용될 데이터가 저장된 객체를 기술한다.
  	(보통 VO클래스 또는 Java의 기본자료형이름, Map객체 등이 사용된다.)
  	(VO클래스 등을 기술할 때는 해당 클래스의 전체 이름을 기술 해야한다.)
  	(parameterClass에 typeAlias에서 지정한 alias명을 사용할 수 있다.)
  -->
<!-- 	<insert id = "insertLprod" parameterClass = "kr.or.ddit.basic.LprodVO"> -->
	<insert id = "insertLprod" parameterClass = "lprodVo">
		insert into lprod(lprod_id, lprod_gu, lprod_nm)
		values(#lprod_id#, #lprod_gu#, #lprod_nm#)
		<!-- 데이터가 들어갈 자리를 표시하기 위해 '#'을 기술 -->
	</insert>
	
	<update id="updateLprod" parameterClass="lprodVo">
		update lprod set lprod_id = #lprod_id#, lprod_nm = #lprod_nm# where lprod_gu = #lprod_gu#
	</update>
	
	<!-- parameterClass에 설정되는 값이 단일값이면 SQL문에 이 값을 나타내는 변수명은
		사용자가 임의로  지정할 수 있다.-->
	<delete id="deleteLprod" parameterClass="String">
		delete from lprod where lprod_gu = #lprod_gu#
	</delete>	
	
	<!-- 외부에서 들어오는 값이 없기 때문에 parameterClass를 기술하지 않아도 되지만, 
		결과를 저장할 객체를 지정해줘야한다.(resultClass)
		resultClass속성 => select문을 처리한 결과를 저장할 VO클래스나 자바의 기본자료형 또는 Map객체를 지정한다.
		=> select결과가 여러개이면 자동으로 List에 담아준다.
		그래서 결과가 여러개 일 경우에도 resultClass에 지정하는 것은
		1개의 레코드가 저장될 클래스나 자료형이름을 지정한다.
	-->
	<select id="getAllLprod" resultClass="lprodVo">
		select * from lprod
	</select>
	
	<select id="getLprod" parameterClass="String" resultClass="lprodVo">
		select * from lprod where lprod_gu = #lprod_gu#
	</select>
</sqlMap>	